{"version":3,"sources":["../src/index.ts","../src/utils/ie11.ts","../src/lib/constants.ts","../src/utils/render.ts","../src/utils/typeGuards.ts","../src/utils/sanitize.ts","../src/lib/state/constants.ts","../src/lib/components/email.ts","../src/lib/state/actionCreators.ts","../src/utils/error.ts","../src/lib/actions/emailActions/add.ts","../src/lib/actions/emailActions/remove.ts","../src/lib/actions/emailActions/index.ts","../src/utils/object.ts","../src/lib/components/emails.ts","../src/lib/components/input.ts","../src/lib/components/root.ts","../src/lib/actions/libraryActions.ts","../src/lib/options/index.ts","../src/utils/isValidEmail.ts","../src/lib/state/actions.ts","../src/lib/state/stateManager.ts","src/index.ts"],"names":["remove","removeNode"],"mappings":";AAkBA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAA,IAAA,EAAA,SAAA,EAAA,GAAA,OAAA,EAAA,OAAA,gBAAA,CAAA,UAAA,cAAA,OAAA,SAAA,EAAA,GAAA,EAAA,UAAA,IAAA,SAAA,EAAA,GAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,MAAA,EAAA,IAAA,SAAA,EAAA,EAAA,GAAA,SAAA,IAAA,KAAA,YAAA,EAAA,EAAA,EAAA,GAAA,EAAA,UAAA,OAAA,EAAA,OAAA,OAAA,IAAA,EAAA,UAAA,EAAA,UAAA,IAAA,GAAA,IAAA,EAAA,WAAA,OAAA,EAAA,OAAA,QAAA,SAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,UAAA,OAAA,EAAA,EAAA,IAAA,IAAA,IAAA,KAAA,EAAA,UAAA,GAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,IAAA,MAAA,KAAA,YAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,mBAAA,QAAA,EAAA,OAAA,UAAA,IAAA,EAAA,OAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,EAAA,GAAA,IAAA,WAAA,IAAA,GAAA,KAAA,MAAA,EAAA,EAAA,QAAA,MAAA,EAAA,KAAA,EAAA,OAAA,MAAA,GAAA,EAAA,CAAA,MAAA,GAAA,QAAA,IAAA,IAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,QAAA,GAAA,EAAA,MAAA,EAAA,OAAA,OAAA,EClBO,ICAK,EDAC,EAAS,SAAC,GACjB,MAAA,IAIA,WAAY,QAAQ,UACtB,EAAK,SACwB,OAApB,EAAK,YAEd,EAAK,WAAW,YAAY,KAInB,EAAW,SAAC,EAAiB,GAGjC,OAAyB,IAAzB,EAAM,QAAQ,IEXV,EAAS,SAAC,EAAkB,GACvC,EAAQ,WAAa,EAAS,QAOnB,EAAsB,SAAC,GAC5B,IAAA,EAAM,SAAS,cAAc,OAG5B,OAFP,EAAO,EAAU,GAEV,EAAI,YCbA,EAAkB,SAC7B,GAEO,OAAA,QAA6C,WAApC,EAA2B,OAOhC,EAAa,SAAC,GAClB,OAAA,MAAM,QAAQ,ICXV,EAAW,SAAC,GAChB,OAAA,EACJ,QAAQ,KAAM,SACd,QAAQ,KAAM,QACd,QAAQ,KAAM,YHRnB,SAAY,GACV,EAAA,MAAA,QACA,EAAA,QAAA,UAFF,CAAY,IAAA,EAAU,KAKtB,IILY,EAQA,EJHC,EAAU,CACrB,UAAW,qBACX,MAAO,oBACP,MAAO,oBACP,QAAS,eKFE,EAAgB,CAC3B,aAAc,eACd,KAAM,QACN,KAAM,cAGA,EAA6B,EAAa,aAA5B,EAAe,EAAa,KAAtB,EAAS,EAAa,KAOrC,EAAgB,SAAC,EAAc,GAAuB,MAAA,iBACrD,EAAQ,MAAK,IAAI,EAAI,YACjC,EAAM,QAAU,QAAU,WAAS,cACvB,EAAE,sBACC,EAAI,WACf,EAAS,EAAM,OAAM,2DAEkB,EAAY,cAAc,EAAE,sDAS5D,EAAoB,SAAC,GACxB,IAAA,EAAoB,EAAQ,gBAkB7B,MAAA,CACL,kBAjBwB,SAAC,GACjB,IAAA,EAAW,EAAK,OAEpB,GAAC,EAAgB,GAAjB,CAII,IAAA,EAAO,EAAO,QAAO,QAEX,IAAP,GACT,EAAgB,GAGlB,EAAO,YDpDX,SAAY,GACV,EAAA,IAAA,MACA,EAAA,OAAA,SACA,EAAA,WAAA,aACA,EAAA,QAAA,UACA,EAAA,YAAA,eALF,CAAY,IAAA,EAAU,KAQtB,SAAY,GACV,EAAA,aAAA,eACA,EAAA,YAAA,cACA,EAAA,UAAA,YAHF,CAAY,IAAA,EAAY,KEDxB,ICPY,EDOC,EAAgB,SAAC,GAAmC,MAAA,CAC/D,QAAS,EACT,KAAM,EAAW,MAON,EAAmB,SAAC,GAAmC,MAAA,CAClE,QAAS,EACT,KAAM,EAAW,SAON,EAAoB,SAAC,GAA4C,MAAA,CAC5E,QAAS,EACT,KAAM,EAAW,cEfN,EAAqB,SAAC,GACjC,IAAA,EAAQ,EAAA,SACR,EAAY,EAAA,aACZ,EAAO,EAAA,QACP,EAAK,EAAA,MAwCC,EAAc,SAAC,GAGZ,OAFS,EAAM,IAAI,SAAC,GAA2B,OAjCtC,SAAC,GACX,IAAA,EAAQ,EAAS,OAEnB,GAAU,KAAV,GAAgB,EAAS,EAAM,OAAQ,GAClC,OAAA,EAIH,IAAA,EAAa,EAAa,EAAc,IAG1C,GAAsB,iBAAf,GAAgD,OAArB,EAAS,QAAkB,CACzD,IAAA,EAAQ,EAAM,SAAS,GAEzB,QAAiB,IAAV,EAAuB,CAC1B,IAAA,EAAY,EAAoB,EAAc,EAAO,IAC3D,EAAS,QAAQ,aAAa,EAAW,EAAS,QAO/C,OAFP,EAAQ,SAAS,EAAO,EAAW,MAAO,EAAM,SAEzC,EAU+C,CAAU,KAEhD,KAAK,SAAC,GAAgC,OAAC,KAgClD,MAAA,CACL,IAbU,SAAC,GAEP,GAAA,EAAW,GACN,OAAA,EAAY,GAIf,IAAA,EAAS,EAAM,MAAM,KAEpB,OAAA,EAAY,ODxFvB,SAAY,GACV,EAAA,2BAAA,6BACA,EAAA,+BAAA,iCACA,EAAA,oBAAA,sBACA,EAAA,mBAAA,qBACA,EAAA,yBAAA,2BACA,EAAA,aAAA,eANF,CAAY,IAAA,EAAU,KAYtB,IAAA,EAAA,SAAA,GAGE,SAAA,EAAmB,EAAiB,GAApC,IAAA,EACE,EAAA,KAAA,KAAM,IAAQ,KTElB,OSDI,EAAK,KAAO,ETChB,ESCA,OAPmC,EAAA,EAAA,GAOnC,EAPA,CAAmC,OEF7B,EAAgB,SAAC,GACjB,QAAc,IAAP,EACH,MAAA,IAAI,EAAc,iBAAkB,EAAW,sBAQ5C,EAAwB,SAAC,GACpC,IAAA,EAAQ,EAAA,SACR,EAAY,EAAA,aACZ,EAAO,EAAA,QACP,EAAK,EAAA,MAOCA,EAAS,SAAC,GXblB,IAAA,EWcY,EAAU,EAAM,SAAS,GAAQ,MAGzC,EAAa,EAAiB,IAGxB,IAAA,EAAuB,QAAnB,EAAG,EAAS,eAAO,IAAA,OAAA,EAAA,EAAE,cAAc,gBAAgB,EAAO,KACpEC,EAAW,GAGX,EAAQ,SAAS,EAAO,EAAW,QAAS,EAAM,SAyC7C,MAAA,CACL,cArBoB,SAAC,GACf,IAAA,EAAO,EAAM,OAAO,GACpB,EAAK,EAAM,OAAO,GAExB,EAAc,GACdD,EAAO,IAiBP,gBAnCsB,SAAC,GACnB,QAAmC,IAA5B,EAAM,SAAS,GAClB,MAAA,IAAI,EAAc,cAAe,EAAW,qBAElDA,EAAO,IAgCT,aAVmB,SAAC,GACd,IAAA,EAAK,EAAM,OAAO,GAExB,EAAc,GACdA,EAAO,MCxEE,EAAkB,SAC7B,GACiB,OAAA,EAAA,EAAA,GACd,EAAmB,IACnB,EAAsB,KCPd,EAAe,SAAa,GAGvC,OAAA,OAAO,KAAK,GAAU,IAAI,SAAC,GAA4B,OAAA,EAAS,MAOrD,EAAgB,SAAa,GAGxC,OAAA,OAAO,KAAK,GAAU,IAAI,SAAC,GAAsC,MAAA,CAC/D,EACA,EAAS,OCZA,EAAiB,SAAC,GAC7B,OAAA,EAAqB,GAClB,IAAI,SAAC,GAAA,IAAA,EAAA,EAAA,EAAA,GAAC,EAAO,EAAA,GAAE,EAAK,EAAA,GACnB,OAAA,EAAc,EAAO,KAEtB,KAAK,KCPG,EAAa,GAKb,EAAgB,WAC3B,MAAA,wDAEW,EAAQ,MAAK,uEAUb,EAAoB,SAC/B,EACA,GAEQ,IAAA,EAAQ,EAAQ,IAKlB,EAAW,WACP,IAAA,EAAU,EAAQ,MAEtB,GAAU,OAAV,EACI,MAAA,IAAI,EACR,6BACA,EAAW,cAIR,OAAA,GA+DF,MAAA,CACL,gBAXsB,WAChB,IAAA,EAAQ,IACR,EAAe,EAAM,MAAM,OAEZ,KAAjB,IACF,EAAI,GACJ,EAAM,MAAQ,KAMhB,kBA1DwB,SAAC,GACnB,IAAA,EAAQ,IACN,EAAQ,EAAK,IAGjB,GAAY,KAFA,EAAM,MAAM,OAExB,CAEE,IAAA,EAAa,KAAK,IAAI,EAAM,MAAM,OAAS,EAAG,GACpD,EAAM,MAAM,SAAc,OAAO,GAAW,KAEhC,UAAR,GACF,EAAI,EAAM,OACV,EAAM,MAAQ,IACG,MAAR,GAAe,EAAM,MAAM,OAAS,IAC7C,EAAI,EAAM,MAAM,MAAM,EAAG,KAAK,IAAI,EAAG,EAAM,MAAM,OAAS,KAC1D,EAAM,MAAQ,MA4ChB,iBApCuB,SAAC,GfvD5B,IAAA,EAAA,EewDI,EAAM,iBACN,EAAM,2BAEA,IAAA,EAAQ,IACR,EAGL,QAHe,EACK,QADL,EACd,EAAM,qBAAa,IAAA,EAAA,EACjB,OAA2C,qBAC9C,IAAA,OAAA,EAAA,EACG,QAAQ,QACT,OAOI,MALY,KAAf,QAAoC,IAAf,IACvB,EAAI,GACJ,EAAM,MAAQ,KAGT,KCjFE,EAAe,SAAC,GAAyB,MAAA,mBACtC,EAAQ,QAAO,WACzB,EAAe,EAAM,UAAS,SAC9B,IAAe,gBCAR,EAAqB,SAAC,GACjC,IAAA,EAAQ,EAAA,SACR,EAAQ,EAAA,SACR,EAAY,EAAA,aACZ,EAAK,EAAA,MASC,EAAW,IAAI,iBANG,WACG,OAArB,EAAS,UACX,EAAS,QAAQ,UAAY,EAAS,QAAQ,gBAuF3C,MAAA,CACL,QApCc,WAEV,GAAA,EAAM,QAAU,EAAa,YACzB,MAAA,IAAI,EACR,8BACA,EAAW,oBAIX,GAAmB,OAAnB,EAAS,MACL,MAAA,IAAI,EACR,6BACA,EAAW,cAKf,EAAS,UAAU,oBAAoB,QAAS,EAAS,mBACzD,EAAS,MAAM,oBAAoB,QAAS,EAAS,mBACrD,EAAS,MAAM,oBAAoB,QAAS,EAAS,kBACrD,EAAS,MAAM,oBAAoB,OAAQ,EAAS,iBACpD,EAAS,aAGT,EAAS,UAAU,YAAc,GACjC,EAAS,UAAU,UAAU,OAAO,EAAQ,WAG5C,EAAS,QAAU,KACnB,EAAS,MAAQ,KAGjB,EAAa,EAAkB,EAAa,aAK5C,KA/EW,WAEP,GAAA,EAAM,QAAU,EAAa,YACzB,MAAA,IAAI,EACR,+BACA,EAAW,oBAaX,GARJ,EAAO,EAAa,GAAQ,EAAS,WACrC,EAAS,UAAU,UAAU,IAAI,EAAQ,WAGzC,EAAS,MAAQ,EAAS,UAAU,cAAc,IAAI,EAAQ,OAC9D,EAAS,QAAU,EAAS,UAAU,cAAc,IAAI,EAAQ,SAGzC,OAAnB,EAAS,OAAuC,OAArB,EAAS,QAChC,MAAA,IAAI,EACR,6CACA,EAAW,0BAKf,EAAS,UAAU,iBAAiB,QAAS,EAAS,mBACtD,EAAS,MAAM,iBAAiB,QAAS,EAAS,mBAClD,EAAS,MAAM,iBAAiB,QAAS,EAAS,kBAClD,EAAS,MAAM,iBAAiB,OAAQ,EAAS,iBACjD,EAAS,QAAQ,EAAS,QAAS,CACjC,WAAW,IAIb,EAAa,EAAkB,EAAa,iBC1DnC,EAAkB,SAAC,GACtB,IAAA,EAA2B,EAAO,aAApB,EAAa,EAAO,SAEtC,QAAiB,IAAjB,IAA+B,MAAM,QAAQ,GACzC,MAAA,IAAI,EACR,mCACA,EAAW,4BAIX,QAAa,IAAb,GAA8C,mBAAb,EAC7B,MAAA,IAAI,EACR,uCACA,EAAW,iCAUJ,EAAc,SAAC,GAA4C,OAAA,EAAA,CACtE,aAAc,GACd,SAAU,cACP,IC9BQ,EAAe,SAAC,GAC3B,MAAA,uCAAuC,KAAK,ICQjC,EAAqB,SAChC,EACA,GAEM,IAAA,EAAO,EAAM,SAAS,EAAO,SAAS,MACtC,EAAQ,EAAM,OAAO,QAAQ,UAC5B,EAAM,SAAS,EAAO,gBACtB,EAAM,OAAO,GACpB,EAAM,QAAQ,OAAO,EAAO,GAC5B,EAAM,OAAO,OAAO,EAAO,IAUhB,EAAkB,SAC7B,EACA,EACA,GAEM,IAAA,EAAQ,CACZ,MAAO,EAAO,QACd,QAAS,EAAa,EAAO,UAE/B,EAAM,OAAO,KAAK,EAAO,SACzB,EAAM,OAAO,EAAO,SAAW,EAC/B,EAAM,SAAS,GAAS,EACxB,EAAM,QAAQ,KAAK,IAQR,EAAqB,SAChC,EACA,GAEA,EAAM,MAAQ,EAAO,SCpCV,EAAe,WACpB,IAAA,EAAK,CACT,QAAS,GAsEJ,MAAA,CACL,aAhCmB,SACnB,EACA,GAEQ,OAAA,EAAO,MACR,KAAA,EAAW,IACR,IAAA,EAAQ,OAAO,EAAG,SAIjB,OAHP,EAAgB,EAAQ,EAAO,GAC/B,EAAG,UAEI,EAGJ,KAAA,EAAW,OAGP,YAFP,EAAmB,EAAQ,GAKxB,KAAA,EAAW,YAGP,YAFP,EAAmB,EAAQ,GAK7B,QACS,SAOX,UAjEgB,SAAC,GACX,IAAA,EAAsB,GAEtB,EAAW,EAAa,OAC5B,SAAC,EAAe,GACR,IAAA,EAAQ,OAAO,EAAG,SAQjB,OAPP,EAAI,GAAS,CACX,MAAK,EACL,QAAS,EAAa,IAExB,EAAO,GAAS,EAChB,EAAG,UAEI,GAET,IAGK,MAAA,CACL,OAAQ,EACR,QAAS,EAAoB,GAC7B,SAAQ,EACR,OAAM,EACN,MAAO,EAAa,iBrBlCpB,EAAc,SAClB,EACA,GAGM,IAAA,EAAmB,EAAY,GACrC,EAAgB,GAGV,IAAA,EAA8B,IAA5B,EAAS,EAAA,UAAE,EAAY,EAAA,aACzB,EAAQ,EAAU,EAAQ,cAC1B,EAAW,SAAC,GAChB,OAAA,EAAa,EAAQ,IAGjB,EAAqB,CACzB,UAAW,EACX,MAAO,KACP,QAAS,MAIL,EAAc,EAAgB,CAClC,SAAQ,EACR,aAAc,EACd,QAAO,EACP,MAAK,IAID,EAAQ,EAAA,EAAA,GACT,EAAkB,EAAU,IAC5B,EAAkB,IAIjB,EAAiB,EAAmB,CACxC,SAAQ,EACR,aAAc,EACd,SAAQ,EACR,MAAK,IAuBA,OAnBP,EAAe,OAmBR,CACL,IAAK,EAAY,IACjB,QAAS,EAAe,QACxB,OAAQ,EAAM,OACd,QAAS,EAAM,QACf,KAAM,EAAe,KACrB,cAAe,EAAY,cAC3B,aAAc,EAAY,eAtE9B,EAAA,EAAA,QAAA,QAAA;;;;AsByCA,aAAA,IAAA,EAAA,MAAA,KAAA,iBAAA,SAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,IAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IA3DA,IAAA,EAAA,EAAA,QAAA,+BAGA,SAAS,EAAa,GACd,IAAA,EAAsB,GAcrB,MAAA,CAAE,SAZA,WACA,OAAM,CACL,IAAA,EAAY,KAAK,SAAS,SAAS,IAAI,MAAM,GAE/C,IAAkC,IAAlC,EAAU,QAAQ,GAGV,OAFV,EAAU,KAAK,GAEL,EAAS,IAAI,KAQ/B,SAAS,IACD,IAAA,EAAqB,SAAS,cAAc,iBAC5C,EAAkB,SAAS,cAAc,wBACzC,EAAe,SAAS,cAAc,8BAExC,GAAuB,OAAvB,EACI,MAAA,IAAI,MAAM,eAGZ,IAAA,EAAc,EAAA,QAAY,GAC1B,EAAY,EAAa,aAiBP,OAApB,GACF,EAAgB,iBAAiB,QAhB1B,WACD,IAAA,EAAW,EAAU,WAE3B,EAAY,IAAI,KAgBG,OAAjB,GACF,EAAa,iBAAiB,QAdvB,WACC,IACF,EADc,EAAW,QACG,OAAO,SAAU,GAC1C,OAAA,QAAQ,EAAM,WACpB,OAEH,MAAM,KAWR,SAAS,oBAAoB,mBAAoB,GAvDnD,QAAA,6CA0DA,SAAS,iBAAiB,mBAAoB","file":"src.302291d3.js","sourceRoot":"..","sourcesContent":["import EmailsInput from '@marcin-pajak/emails-input';\nimport '@marcin-pajak/emails-input/lib/styles.css';\n\nfunction randomEmails(domain: string) {\n  const generated: string[] = [];\n\n  function generate() {\n    while (true) {\n      const candidate = Math.random().toString(36).slice(7);\n\n      if (generated.indexOf(candidate) === -1) {\n        generated.push(candidate);\n\n        return `${candidate}@${domain}`;\n      }\n    }\n  }\n\n  return { generate };\n}\n\nfunction Init() {\n  const emailsInputElement = document.querySelector('#emails-input') ;\n  const addEmailElement = document.querySelector('[data-js=\"addEmail\"]');\n  const countElement = document.querySelector('[data-js=\"getEmailsCount\"]');\n\n  if (emailsInputElement === null) {\n    throw new Error(\"Wrong html.\")\n  }\n\n  const emailsInput = EmailsInput(emailsInputElement as HTMLElement);\n  const generator = randomEmails('email.com');\n\n  function handleAddEmailClick() {\n    const newEmail = generator.generate();\n\n    emailsInput.add(newEmail);\n  }\n\n  function handleGetEmailsCountClick() {\n    const { entries } = emailsInput;\n    const validEmailsAmount = entries.filter(function (entry) {\n      return Boolean(entry.isValid);\n    }).length;\n\n    alert(validEmailsAmount);\n  }\n\n  if (addEmailElement !== null) {\n    addEmailElement.addEventListener('click', handleAddEmailClick);\n  }\n\n  if (countElement !== null) {\n    countElement.addEventListener('click', handleGetEmailsCountClick);\n  }\n\n  document.removeEventListener('DOMContentLoaded', Init);\n}\n\ndocument.addEventListener('DOMContentLoaded', Init);\n","export const remove = (node?: Element | null): void => {\n  if (node === undefined || node === null) {\n    return;\n  }\n\n  if ('remove' in Element.prototype) {\n    node.remove();\n  } else if (node.parentNode !== null) {\n    // eslint-disable-next-line unicorn/prefer-node-remove\n    node.parentNode.removeChild(node);\n  }\n};\n\nexport const includes = (array: string[], item: string): boolean => {\n  // eslint-disable-next-line max-len\n  // eslint-disable-next-line @typescript-eslint/prefer-includes, unicorn/prefer-includes,\n  return array.indexOf(item) !== -1;\n};\n","export enum ChangeType {\n  Added = 'Added',\n  Removed = 'Removed',\n}\n\nexport const CLASSES = {\n  CONTAINER: 'EmailsInputWrapper',\n  EMAIL: 'EmailsInput-email',\n  INPUT: 'EmailsInput-input',\n  WRAPPER: 'EmailsInput',\n};\n","/**\n * Render Component\n * @param template\n * @param element\n */\nexport const render = (template: string, element: Element): void => {\n  element.innerHTML += template.trim();\n};\n\n/**\n * Make DOM Node from template\n * @param template\n */\nexport const makeElementFromHTML = (template: string): ChildNode => {\n  const div = document.createElement('div');\n  render(template, div);\n\n  return div.firstChild as ChildNode;\n};\n","/**\n * Verify if clicked element is a button\n * @param node\n */\nexport const isClickedButton = (\n  node: EventTarget | null,\n): node is HTMLButtonElement => {\n  return Boolean((node as HTMLButtonElement).type === 'button');\n};\n\n/**\n * Verify if value is an array of emails\n * @param value\n */\nexport const isMultiple = (value: string | string[]): value is string[] => {\n  return Array.isArray(value);\n};\n","/**\n * Sanitizes rendered HTML\n * @param value\n */\nexport const sanitize = (value: string): string => {\n  return value\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/\"/g, '&quot;');\n};\n","export enum ActionType {\n  Add = 'ADD',\n  Remove = 'REMOVE',\n  Initialize = 'INITIALIZE',\n  Destroy = 'DESTROY',\n  UpdateState = 'UPDATE_STATE',\n}\n\nexport enum LibraryState {\n  Initializing = 'Initializing',\n  Initialized = 'Initialized',\n  Destroyed = 'Destroyed',\n}\n","import { sanitize } from '../../utils/sanitize';\nimport { isClickedButton } from '../../utils/typeGuards';\nimport { EmailActions } from '../actions/types';\nimport { CLASSES } from '../constants';\nimport { Entry } from '../state/types';\nimport { EmailHandlers } from './types';\n\nexport const EMAIL_CLASSES = {\n  removeButton: 'Email-remove',\n  root: 'Email',\n  text: 'Email-text',\n};\n\nconst { removeButton, root, text } = EMAIL_CLASSES;\n\n/**\n * Email Component Template\n * @param value\n * @param id\n */\nexport const emailTemplate = (value: Entry, id: string): string => `\n<div class=\"${CLASSES.EMAIL} ${root} Email--${\n  value.isValid ? 'valid' : 'invalid'\n}\" data-id=\"${id}\">\n  <span class=\"${text}\">\n    ${sanitize(value.email)}\n  </span>\n  <button aria-label=\"remove email\" class=\"${removeButton}\" data-id=\"${id}\" type=\"button\">\n    &times;\n  </button>\n</div>`;\n\n/**\n * Email Component Event Handlers\n * @param handlers\n */\nexport const makeEmailHandlers = (handlers: EmailActions): EmailHandlers => {\n  const { removeByLocalId } = handlers;\n\n  const handleRemoveClick = (event: MouseEvent): void => {\n    const { target } = event;\n\n    if (!isClickedButton(target)) {\n      return;\n    }\n\n    const { id } = target.dataset;\n\n    if (typeof id !== 'undefined') {\n      removeByLocalId(id);\n    }\n\n    target.blur();\n  };\n\n  return {\n    handleRemoveClick,\n  };\n};\n","import { ActionType, LibraryState } from './constants';\nimport { AddEmailAction, RemoveEmailAction, UpdateStateAction } from './types';\n\n/**\n * Add new email\n * @param email\n */\nexport const addItemAction = (email: string): AddEmailAction => ({\n  payload: email,\n  type: ActionType.Add,\n});\n\n/**\n * Remove email\n * @param id\n */\nexport const removeItemAction = (id: string): RemoveEmailAction => ({\n  payload: id,\n  type: ActionType.Remove,\n});\n\n/**\n * Update Library's state\n * @param state\n */\nexport const updateStateAction = (state: LibraryState): UpdateStateAction => ({\n  payload: state,\n  type: ActionType.UpdateState,\n});\n","export enum ErrorCodes {\n  ERR_INVALID_INITIAL_VALUES = 'ERR_INVALID_INITIAL_VALUES',\n  ERR_INVALID_ON_CHANGE_CALLBACK = 'ERR_INVALID_ON_CHANGE_CALLBACK',\n  ERR_EMAIL_NOT_FOUND = 'ERR_EMAIL_NOT_FOUND',\n  ERR_INVALID_ACTION = 'ERR_INVALID_ACTION',\n  ERR_COULD_NOT_INITIALIZE = 'ERR_COULD_NOT_INITIALIZE',\n  ERR_INTERNAL = 'ERR_INTERNAL',\n}\n\n/**\n * Custom Error with code\n */\nexport class ErrorWithCode extends Error {\n  public code: string;\n\n  public constructor(message: string, code: ErrorCodes) {\n    super(message);\n    this.code = code;\n  }\n}\n","import { includes } from '../../../utils/ie11';\nimport { makeElementFromHTML } from '../../../utils/render';\nimport { isMultiple } from '../../../utils/typeGuards';\nimport { emailTemplate } from '../../components/email';\nimport { ChangeType } from '../../constants';\nimport { addItemAction } from '../../state/actionCreators';\nimport { EmailActionsProperties, EmailAddActions } from '../types';\n\n/**\n * Add Email Actions\n * @param EmailActionsProperties\n */\nexport const makeAddItemActions = ({\n  elements,\n  handleAction,\n  options,\n  state,\n}: EmailActionsProperties): EmailAddActions => {\n  /**\n   * Add unique email\n   * Returns true when email was added successfully and false when not.\n   * @param rawValue\n   * @private\n   */\n  const addSingle = (rawValue: string): boolean => {\n    const value = rawValue.trim();\n\n    if (value === '' || includes(state.emails, value)) {\n      return false;\n    }\n\n    // Update state\n    const newEntryId = handleAction(addItemAction(value));\n\n    // Update UI\n    if (typeof newEntryId === 'string' && elements.wrapper !== null) {\n      const entry = state.entryMap[newEntryId];\n\n      if (typeof entry !== 'undefined') {\n        const emailNode = makeElementFromHTML(emailTemplate(entry, newEntryId));\n        elements.wrapper.insertBefore(emailNode, elements.input);\n      }\n    }\n\n    // Notify listeners\n    options.onChange(value, ChangeType.Added, state.emails);\n\n    return true;\n  };\n\n  /**\n   * Adds multiple unique emails.\n   * Returns true when all emails were added successfully and false when not.\n   * @param value\n   * @private\n   */\n  const addMultiple = (value: string[]): boolean => {\n    const results = value.map((email: string): boolean => addSingle(email));\n\n    return !results.some((isSuccess: boolean): boolean => !isSuccess);\n  };\n\n  /**\n   * Add unique emails in any format.\n   * Returns true when added successfully and false when not.\n   *\n   * Accepts:\n   * - array of single emails\n   * - string with single email\n   * - string with multiple, comma separated emails\n   *\n   * Examples of @param value:\n   * [\"email@email.com\", \"email2@email.com\"]\n   * \"email@email.com, email2@email.com\"\n   * \"email@email.com\"\n   *\n   * @param value\n   * @public\n   */\n  const add = (value: string | string[]): boolean => {\n    // Array of emails\n    if (isMultiple(value)) {\n      return addMultiple(value);\n    }\n\n    // Split if value contains multiple, comma separated emails\n    const values = value.split(',');\n\n    return addMultiple(values);\n  };\n\n  return {\n    add,\n  };\n};\n","import { ErrorCodes, ErrorWithCode } from '../../../utils/error';\nimport { remove as removeNode } from '../../../utils/ie11';\nimport { ChangeType } from '../../constants';\nimport { removeItemAction } from '../../state/actionCreators';\nimport { EmailActionsProperties, EmailRemoveActions } from '../types';\n\n/**\n * Throw if not valid payload\n * @param id\n */\nconst validateEmail = (id?: string): void => {\n  if (typeof id === 'undefined') {\n    throw new ErrorWithCode('Invalid value.', ErrorCodes.ERR_EMAIL_NOT_FOUND);\n  }\n};\n\n/**\n * Remove Email Actions\n * @param ItemActionsProperties\n */\nexport const makeRemoveItemActions = ({\n  elements,\n  handleAction,\n  options,\n  state,\n}: EmailActionsProperties): EmailRemoveActions => {\n  /**\n   * Remove item\n   * @param localId\n   * @private\n   */\n  const remove = (localId: string): void => {\n    const { email } = state.entryMap[localId];\n\n    // Update state\n    handleAction(removeItemAction(localId));\n\n    // Update UI\n    const node = elements.wrapper?.querySelector(`div[data-id=\"${localId}\"`);\n    removeNode(node);\n\n    // Notify listeners\n    options.onChange(email, ChangeType.Removed, state.emails);\n  };\n\n  /**\n   * Remove item by it's internal id\n   * @param id\n   * @private\n   */\n  const removeByLocalId = (localId: string): void => {\n    if (typeof state.entryMap[localId] === 'undefined') {\n      throw new ErrorWithCode('Invalid id.', ErrorCodes.ERR_EMAIL_NOT_FOUND);\n    } else {\n      remove(localId);\n    }\n  };\n\n  /**\n   * Remove item by index\n   * @param index\n   * @public\n   */\n  const removeByIndex = (index: number): void => {\n    const name = state.emails[index];\n    const id = state.mapper[name];\n\n    validateEmail(id);\n    remove(id);\n  };\n\n  /**\n   * Remove item by name\n   * @param name\n   * @public\n   */\n  const removeByName = (name: string): void => {\n    const id = state.mapper[name];\n\n    validateEmail(id);\n    remove(id);\n  };\n\n  return {\n    removeByIndex,\n    removeByLocalId,\n    removeByName,\n  };\n};\n","import { EmailActions, EmailActionsProperties } from '../types';\nimport { makeAddItemActions } from './add';\nimport { makeRemoveItemActions } from './remove';\n\n/**\n * Actions to add and remove emails\n * @param properties\n */\nexport const makeItemActions = (\n  properties: EmailActionsProperties,\n): EmailActions => ({\n  ...makeAddItemActions(properties),\n  ...makeRemoveItemActions(properties),\n});\n","/**\n * Get object values\n * Object values is not available in IE11\n * @param object\n */\nexport const objectValues = <ObjectType>(instance: {\n  [key: string]: ObjectType;\n}): ObjectType[] =>\n  Object.keys(instance).map((key: string): ObjectType => instance[key]);\n\n/**\n * Get object entries\n * Object entries is not available in IE11\n * @param object\n */\nexport const objectEntries = <ObjectType>(instance: {\n  [key: string]: ObjectType;\n}): Array<[string, ObjectType]> =>\n  Object.keys(instance).map((key: string): [string, ObjectType] => [\n    key,\n    instance[key],\n  ]);\n","import { objectEntries } from '../../utils/object';\nimport { Entry, EntryMap } from '../state/types';\nimport { emailTemplate } from './email';\n\n/**\n * Emails Component Template\n * @param entryMap\n */\nexport const emailsTemplate = (entryMap: EntryMap): string =>\n  objectEntries<Entry>(entryMap)\n    .map(([localId, entry]: [string, Entry]): string =>\n      emailTemplate(entry, localId),\n    )\n    .join('');\n","import { ErrorCodes, ErrorWithCode } from '../../utils/error';\nimport { EmailActions } from '../actions/types';\nimport { CLASSES } from '../constants';\nimport { WindowWithClipboard } from '../types';\nimport { Elements, InputHandlers } from './types';\n\nexport const MIN_LENGTH = 21;\n\n/**\n * Input Component Template\n */\nexport const inputTemplate = (): string =>\n  `<input\n    aria-label=\"add more people\"\n    class=\"${CLASSES.INPUT}\"\n    max-length=\"255\"\n    placeholder=\"add more people...\"\n  />`;\n\n/**\n * Input Component Event Handlers\n * @param elements\n * @param handlers\n */\nexport const makeInputHandlers = (\n  elements: Elements,\n  handlers: EmailActions,\n): InputHandlers => {\n  const { add } = handlers;\n\n  /**\n   * Return input element\n   */\n  const getInput = (): HTMLInputElement => {\n    const { input } = elements;\n\n    if (input === null) {\n      throw new ErrorWithCode(\n        'Library is in wrong state.',\n        ErrorCodes.ERR_INTERNAL,\n      );\n    }\n\n    return input;\n  };\n\n  /**\n   * Add email on enter and comma\n   * @param event\n   */\n  const handleInputChange = (event: KeyboardEvent): void => {\n    const input = getInput();\n    const { key } = event;\n    const trimmed = input.value.trim();\n\n    if (trimmed === '') return;\n\n    const inputWidth = Math.max(input.value.length + 1, MIN_LENGTH);\n    input.style.minWidth = `${String(inputWidth)}ch`;\n\n    if (key === 'Enter') {\n      add(input.value);\n      input.value = '';\n    } else if (key === ',' && input.value.length > 1) {\n      add(input.value.slice(0, Math.max(0, input.value.length - 1)));\n      input.value = '';\n    }\n  };\n\n  /**\n   * Add email on paste\n   * @param event\n   */\n  const handleInputPaste = (event: ClipboardEvent): boolean => {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n\n    const input = getInput();\n    const pastedText = (\n      event.clipboardData ??\n      ((window as unknown) as WindowWithClipboard).clipboardData\n    )\n      ?.getData('text')\n      .trim();\n\n    if (pastedText !== '' && pastedText !== undefined) {\n      add(pastedText);\n      input.value = '';\n    }\n\n    return false;\n  };\n\n  /**\n   * Add email on blur\n   */\n  const handleInputBlur = (): void => {\n    const input = getInput();\n    const trimmedValue = input.value.trim();\n\n    if (trimmedValue !== '') {\n      add(trimmedValue);\n      input.value = '';\n    }\n  };\n\n  return {\n    handleInputBlur,\n    handleInputChange,\n    handleInputPaste,\n  };\n};\n","import { CLASSES } from '../constants';\nimport { State } from '../state/types';\nimport { emailsTemplate } from './emails';\nimport { inputTemplate } from './input';\n\n/**\n * Root Component Template\n * @param state\n */\nexport const rootTemplate = (state: State): string => `\n  <div class=\"${CLASSES.WRAPPER}\">\n    ${emailsTemplate(state.entryMap)}\n    ${inputTemplate()}\n  </div>\n`;\n","import { ErrorCodes, ErrorWithCode } from '../../utils/error';\nimport { render } from '../../utils/render';\nimport { rootTemplate } from '../components/root';\nimport { CLASSES } from '../constants';\nimport { updateStateAction } from '../state/actionCreators';\nimport { LibraryState } from '../state/constants';\nimport { LibraryActionProperties, LibraryActions } from './types';\n\n/**\n * Public init / destroy actions\n * @param LibraryActionProperties\n */\nexport const makeLibraryActions = ({\n  elements,\n  handlers,\n  handleAction,\n  state,\n}: LibraryActionProperties): LibraryActions => {\n  // Keep the input always visible\n  const mutationHandler = (): void => {\n    if (elements.wrapper !== null) {\n      elements.wrapper.scrollTop = elements.wrapper.scrollHeight;\n    }\n  };\n\n  const observer = new MutationObserver(mutationHandler);\n\n  /**\n   * Initialize Library\n   * @public\n   */\n  const init = (): void => {\n    // Validate state\n    if (state.state === LibraryState.Initialized) {\n      throw new ErrorWithCode(\n        'Library already initialized.',\n        ErrorCodes.ERR_INVALID_ACTION,\n      );\n    }\n\n    // Render UI\n    render(rootTemplate(state), elements.container);\n    elements.container.classList.add(CLASSES.CONTAINER);\n\n    // Set elements\n    elements.input = elements.container.querySelector(`.${CLASSES.INPUT}`);\n    elements.wrapper = elements.container.querySelector(`.${CLASSES.WRAPPER}`);\n\n    // Validate\n    if (elements.input === null || elements.wrapper === null) {\n      throw new ErrorWithCode(\n        'Library could not be initialized properly.',\n        ErrorCodes.ERR_COULD_NOT_INITIALIZE,\n      );\n    }\n\n    // Attach listeners\n    elements.container.addEventListener('click', handlers.handleRemoveClick);\n    elements.input.addEventListener('keyup', handlers.handleInputChange);\n    elements.input.addEventListener('paste', handlers.handleInputPaste);\n    elements.input.addEventListener('blur', handlers.handleInputBlur);\n    observer.observe(elements.wrapper, {\n      childList: true,\n    });\n\n    // Update state\n    handleAction(updateStateAction(LibraryState.Initialized));\n  };\n\n  /**\n   * Kill Library\n   * @public\n   */\n  const destroy = (): void => {\n    // Validate state\n    if (state.state !== LibraryState.Initialized) {\n      throw new ErrorWithCode(\n        'Library is not initialized.',\n        ErrorCodes.ERR_INVALID_ACTION,\n      );\n    }\n\n    if (elements.input === null) {\n      throw new ErrorWithCode(\n        'Library is in wrong state.',\n        ErrorCodes.ERR_INTERNAL,\n      );\n    }\n\n    // Clean up\n    elements.container.removeEventListener('click', handlers.handleRemoveClick);\n    elements.input.removeEventListener('keyup', handlers.handleInputChange);\n    elements.input.removeEventListener('paste', handlers.handleInputPaste);\n    elements.input.removeEventListener('blur', handlers.handleInputBlur);\n    observer.disconnect();\n\n    // Clean UI\n    elements.container.textContent = '';\n    elements.container.classList.remove(CLASSES.CONTAINER);\n\n    // Clean elements\n    elements.wrapper = null;\n    elements.input = null;\n\n    // Update state\n    handleAction(updateStateAction(LibraryState.Destroyed));\n  };\n\n  return {\n    destroy,\n    init,\n  };\n};\n","import { ErrorCodes, ErrorWithCode } from '../../utils/error';\nimport { Options } from './types';\n\n/**\n * Validate options\n * @param options\n * @private\n */\nexport const validateOptions = (options: Partial<Options>): void => {\n  const { initialValue, onChange } = options;\n\n  if (initialValue !== undefined && !Array.isArray(initialValue)) {\n    throw new ErrorWithCode(\n      'Initial values must be an array.',\n      ErrorCodes.ERR_INVALID_INITIAL_VALUES,\n    );\n  }\n\n  if (onChange !== undefined && typeof onChange !== 'function') {\n    throw new ErrorWithCode(\n      'onChange callback is not a function.',\n      ErrorCodes.ERR_INVALID_ON_CHANGE_CALLBACK,\n    );\n  }\n};\n\n/**\n * Merge user options with default options\n * @param userOptions\n * @private\n */\nexport const makeOptions = (userOptions?: Partial<Options>): Options => ({\n  initialValue: [],\n  onChange: (): void => {},\n  ...userOptions,\n});\n","/**\n * Validate email\n * @param value\n */\nexport const isValidEmail = (value: string): boolean =>\n  /^[\\w%+.-]+@[\\d.a-z-]+\\.[a-z]{2,20}$/i.test(value);\n","import { isValidEmail } from '../../utils/isValidEmail';\nimport {\n  AddEmailAction,\n  RemoveEmailAction,\n  State,\n  UpdateStateAction,\n} from './types';\n\n/**\n * Remove email\n * @param action\n * @param state\n */\nexport const handleRemoveAction = (\n  action: RemoveEmailAction,\n  state: State,\n): void => {\n  const name = state.entryMap[action.payload].email;\n  const index = state.emails.indexOf(name);\n  delete state.entryMap[action.payload];\n  delete state.mapper[name];\n  state.entries.splice(index, 1);\n  state.emails.splice(index, 1);\n};\n\n/**\n * Add email\n * Returns local Id of new email\n * @param action\n * @param state\n * @param newId\n */\nexport const handleAddAction = (\n  action: AddEmailAction,\n  state: State,\n  newId: string,\n): void => {\n  const entry = {\n    email: action.payload,\n    isValid: isValidEmail(action.payload),\n  };\n  state.emails.push(action.payload);\n  state.mapper[action.payload] = newId;\n  state.entryMap[newId] = entry;\n  state.entries.push(entry);\n};\n\n/**\n * Update Library state\n * @param action\n * @param state\n */\nexport const handleUpdateAction = (\n  action: UpdateStateAction,\n  state: State,\n): void => {\n  state.state = action.payload;\n};\n","import { isValidEmail } from '../../utils/isValidEmail';\nimport { objectValues } from '../../utils/object';\nimport {\n  handleAddAction,\n  handleRemoveAction,\n  handleUpdateAction,\n} from './actions';\nimport { ActionType, LibraryState } from './constants';\nimport {\n  EmailMapper,\n  Entry,\n  EntryMap,\n  State,\n  StateAction,\n  StateManager,\n} from './types';\n\n/**\n * Library's State Manipulation\n */\nexport const stateManager = (): StateManager => {\n  const id = {\n    current: 1,\n  };\n\n  /**\n   * Return new state\n   * @param initialValue\n   */\n  const makeState = (initialValue: string[]): State => {\n    const mapper: EmailMapper = {};\n\n    const entryMap = initialValue.reduce(\n      (map: EntryMap, email: string): EntryMap => {\n        const newId = String(id.current);\n        map[newId] = {\n          email,\n          isValid: isValidEmail(email),\n        };\n        mapper[email] = newId;\n        id.current++;\n\n        return map;\n      },\n      {},\n    );\n\n    return {\n      emails: initialValue,\n      entries: objectValues<Entry>(entryMap),\n      entryMap,\n      mapper,\n      state: LibraryState.Initializing,\n    };\n  };\n\n  /**\n   * Process action\n   * @param action\n   * @param state\n   */\n  const handleAction = (\n    action: StateAction,\n    state: State,\n  ): string | undefined => {\n    switch (action.type) {\n      case ActionType.Add: {\n        const newId = String(id.current);\n        handleAddAction(action, state, newId);\n        id.current++;\n\n        return newId;\n      }\n\n      case ActionType.Remove: {\n        handleRemoveAction(action, state);\n\n        return undefined;\n      }\n\n      case ActionType.UpdateState: {\n        handleUpdateAction(action, state);\n\n        return undefined;\n      }\n\n      default: {\n        return undefined;\n      }\n    }\n  };\n\n  return {\n    handleAction,\n    makeState,\n  };\n};\n","import EmailsInput from '@marcin-pajak/emails-input';\nimport '@marcin-pajak/emails-input/lib/styles.css';\n\nfunction randomEmails(domain: string) {\n  const generated: string[] = [];\n\n  function generate() {\n    while (true) {\n      const candidate = Math.random().toString(36).slice(7);\n\n      if (generated.indexOf(candidate) === -1) {\n        generated.push(candidate);\n\n        return `${candidate}@${domain}`;\n      }\n    }\n  }\n\n  return { generate };\n}\n\nfunction Init() {\n  const emailsInputElement = document.querySelector('#emails-input') ;\n  const addEmailElement = document.querySelector('[data-js=\"addEmail\"]');\n  const countElement = document.querySelector('[data-js=\"getEmailsCount\"]');\n\n  if (emailsInputElement === null) {\n    throw new Error(\"Wrong html.\")\n  }\n\n  const emailsInput = EmailsInput(emailsInputElement as HTMLElement);\n  const generator = randomEmails('email.com');\n\n  function handleAddEmailClick() {\n    const newEmail = generator.generate();\n\n    emailsInput.add(newEmail);\n  }\n\n  function handleGetEmailsCountClick() {\n    const { entries } = emailsInput;\n    const validEmailsAmount = entries.filter(function (entry) {\n      return Boolean(entry.isValid);\n    }).length;\n\n    alert(validEmailsAmount);\n  }\n\n  if (addEmailElement !== null) {\n    addEmailElement.addEventListener('click', handleAddEmailClick);\n  }\n\n  if (countElement !== null) {\n    countElement.addEventListener('click', handleGetEmailsCountClick);\n  }\n\n  document.removeEventListener('DOMContentLoaded', Init);\n}\n\ndocument.addEventListener('DOMContentLoaded', Init);\n"]}